/*
	问题描述:
　　	小H和小W来到了一条街上，两人分开买菜，他们买菜的过程可以描述为，去店里买一些菜然后去旁边的一个
	广场把菜装上车，两人都要买n种菜，所以也都要装n次车。具体的，对于小H来说有n个不相交的时间段[a1,b1],
	[a2,b2]...[an,bn]在装车，对于小W来说有n个不相交的时间段[c1,d1],[c2,d2]...[cn,dn]在装车。其中，一个
	时间段[s, t]表示的是从时刻s到时刻t这段时间，时长为t-s。
　　	由于他们是好朋友，他们都在广场上装车的时候会聊天，他们想知道他们可以聊多长时间。

	输入格式:
　　	输入的第一行包含一个正整数n，表示时间段的数量。
　　	接下来n行每行两个数ai，bi，描述小H的各个装车的时间段。
　　	接下来n行每行两个数ci，di，描述小W的各个装车的时间段。

	输出格式:
　　	输出一行，一个正整数，表示两人可以聊多长时间。

	样例输入:
		4
		1 3
		5 6
		9 13
		14 15
		2 4
		5 7
		10 11
		13 14

	样例输出:
		3

	数据规模和约定:
		对于所有的评测用例，1 ≤ n ≤ 2000, ai < bi < a(i+1)，ci < di < c(i+1),对于所有的i(1 ≤ i ≤ n)有，
	1 ≤ ai, bi, ci, di ≤ 1,000,000。
*/

#include <cstdio>

struct Inteval{
	int x, y;
}A[2010], B[2010];

int main(){
	
	int n;
	scanf("%d", &n);
	for(int i=0; i<n; i++){
		scanf("%d%d", &A[i].x, &A[i].y);
	}
	for(int i=0; i<n; i++){
		scanf("%d%d", &B[i].x, &B[i].y);
	}
	long long ans=0;
	for(int i=0,j=0; i<n && j<n;){
		if(A[i].x < B[j].x){//A的左边界小于B的左边界
			if(A[i].y < B[j].x){//A的右边界小于B的左边界
				i++;
			}else if(A[i].y >= B[j].x && A[i].y < B[j].y){//A的右边界大于等于B的左边界且小于B的右边界
				ans += A[i].y - B[j].x;
				i++;
			}else{//A的右边界大于等于B的右边界
				ans += B[j].y - B[j].x;
				j++;
			}
		}else if(A[i].x >= B[j].x && A[i].x < B[j].y){//A的左边界大于等于B的左边界且小于B的右边界
			if(A[i].y < B[j].y){//A的右边界小于B的右边界
				ans += A[i].y - A[i].x;
				i++;
			}else if(A[i].y >= B[j].y){//A的右边界大于等于B的右边界
				ans += B[j].y - A[i].x;
				j++;
			}
		}else{//A的左边界大于等与B的右边界
			j++;
		}
	}
	
	printf("%lld", ans);
	
	return 0;
}























